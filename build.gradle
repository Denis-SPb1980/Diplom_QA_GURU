plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
    id("io.freefair.lombok") version "8.13.1"
}

group 'org.example'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:7.7.3",
            'io.rest-assured:rest-assured:5.3.1',
            "io.rest-assured:json-schema-validator:5.5.5",
            "org.junit.jupiter:junit-jupiter:5.9.0",
            "org.slf4j:slf4j-simple:2.0.7",
            "io.qameta.allure:allure-rest-assured:2.19.0",
            "com.github.javafaker:javafaker:1.0.2",
            'org.assertj:assertj-core:3.24.2',
            "org.aeonbits.owner:owner:1.0.12",
            'io.qameta.allure:allure-selenide:2.19.0')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task web_test(type: Test) {
    useJUnitPlatform {
        includeTags("web")
    }

    systemProperties(System.getProperties())
}

task api_test(type: Test) {
    useJUnitPlatform {
        includeTags("all_api")
    }

    systemProperties(System.getProperties())
}